"""
Research presentation 11/17/2022
Nathan Flynn

"""
import matplotlib.pyplot as plt
import numpy as np

FID_20K = [
    # 451.18231012124664,
    38.76179883807549,
    35.54955198449535,
    38.80614737971966,
    44.63126927515819,
    37.720514664860076,
    41.24923805334332,
    39.21208736069781,
    45.04990940190788,
    45.547858467530375,
    44.24331116292407,
    48.56262881704336,
    51.16804515478748,
    48.55949037778585,
    47.989013236957845,
    48.03019232976446,
    46.96186088364536,
    56.07836451501325,
    56.57009908333292,
    57.25976977615926,
    56.6082251000027
]
IS_20K = [
# 1.0942567080801395,
1.4397567091499492,
1.4352360189786535,
1.4835286339798717,
1.4306419984207905,
1.5460538916197666,
1.496271014634714,
1.5040059992819401,
1.4756262125248498,
1.5051465383951972,
1.5047047313692743,
1.4950345945474872,
1.4928420240972435,
1.4200284550210764,
1.5543700175894153,
1.5705003875148926,
1.484253232941565,
1.394111097017852,
1.4135460099505166,
1.4302706810199861,
1.5646197667440167
]

FID_10K = [
    # 453.0666827565074,
41.3191738537154,
38.19958468525762,
37.39523690108527,
36.06592875238607,
38.93097327535213,
43.39160474523443,
51.24948714369526,
46.28908585438192,
47.95335581591479,
46.0858812633753,
46.08696721518774,
47.58906289737135,
50.20937038850997,
54.71716077776888,
51.61415420035445,
59.04723739999764,
54.316027686686056,
50.64112697222373,
51.78418110051848,
55.48241048916523
    ]


IS_10K = [
#   1.0912712227125172,
1.4828620847939171,
1.4743686943448462,
1.398913429619053,
1.5724439695758077,
1.485286844794261,
1.3582853856461807,
1.4546455763036101,
1.494074059896065,
1.4278400228531143,
1.4149099103302318,
1.4943114994347868,
1.4806107744935402,
1.4120290381090785,
1.5619292583438258,
1.40074580023199,
1.4646475421639396,
1.4224788383433438,
1.4478971187086933,
1.4728064915788,
1.4407472949776425
    ]

FID_5K = [
    # 446.8937992173543,
42.27676227758758,
35.22667720115324,
37.13161002591424,
36.73856304591288,
38.67561427527812,
42.40628746698091,
43.390988536464974,
42.88811868283801,
48.03677555915601,
42.060499680798074,
46.37114361754752,
42.34542351933385,
52.281070799903034,
49.312578803250744,
50.62417826872276,
48.39587777701992,
55.047856276576496,
49.523970098071146,
57.72578614281224,
52.00372308312073
    ]

IS_5K = [
    # 1.08638830867845,
1.4626523911526734,
1.4627473134279145,
1.462578184696124,
1.5369150979661867,
1.4515114771549087,
1.4687157732797953,
1.4323956900909656,
1.4424248212734372,
1.4618040769539116,
1.4774190378444596,
1.4726542261075068,
1.4777862613705448,
1.4706299647938532,
1.4677158002670843,
1.4726689287503678,
1.4191416716306315,
1.4649783922515616,
1.4708601893624,
1.4039802256980105,
1.5279959130219256
]

FID_3K = [
    # 450.5389747253599,
38.497070377416094,
36.29313576007371,
39.71092821629401,
37.19558485805538,
38.54142721445987,
39.215794595889605,
44.54960758389659,
43.72640095238107,
38.10723813467854,
42.897310904104785,
40.02207762261992,
44.57230807469952,
44.31051710068486,
42.69231127989292,
43.72011417611171,
46.86116637585394,
44.14146222761363,
46.27830172715281,
53.06555654367588,
47.63753451939172
]

IS_3K = [
    # 1.0816652809721872,
1.3767325206008347,
1.4349470757606289,
1.444431111868198,
1.5560752787359569,
1.4783223593767338,
1.4050755490583031,
1.4338448919838775,
1.405774905859308,
1.4111775744797865,
1.4307116392221086,
1.5610733176340585,
1.361607303044305,
1.4493308518436603,
1.4326435384836294,
1.4140768321856445,
1.4765882937702375,
1.467926765088492,
1.409590030363836,
1.4145693915451454,
1.5308409062966688
]

FID_1K = [
    40.58170301022463,
    35.39003910932168,
    34.21683197747305,
    39.259650909720264,
    41.11318461541899,
    39.865117325065754,
    37.10996769177564,
    44.46074670300344,
    31.484585018836185,
    43.96081555615433,
    49.750186917284026,
    45.80696378348313,
    42.67750292418327,
    41.43855728624149,
    54.482922039631944,
    40.602628122897045,
    54.35773020542608,
    39.40146724039846,
    47.65852568346557,
    47.0320613593573
]

IS_1K = [
    1.3694636736542305,
    1.4119621318458682,
    1.4765289447542063,
    1.4346460998603723,
    1.3527626403634274,
    1.4330385490518631,
    1.582287167959739,
    1.4163742021373285,
    1.5533422796870462,
    1.4303716764858734,
    1.3974813284656662,
    1.3988716107024417,
    1.5503289054089202,
    1.5799739867820053,
    1.4031024169423818,
    1.6555751443689612,
    1.3870176850970481,
    1.578043177632362,
    1.5017974945026311,
    1.4457617898495614
    ]

x = []
for i in range(1,21):
    x.append(5000*i)

## FID SCORES ##
# 20K 
plt.scatter(x, FID_20K, label = "20K training images")
z = np.polyfit(x, FID_20K, 1)
p = np.poly1d(z)
plt.plot(x, p(x))
# 10 K
plt.scatter(x, FID_10K, label = "10K training images")
z = np.polyfit(x, FID_10K, 1)
p = np.poly1d(z)
plt.plot(x, p(x))
# 5 K
plt.scatter(x, FID_5K, label = "5K training images")
z = np.polyfit(x, FID_5K, 1)
p = np.poly1d(z)
plt.plot(x, p(x))
# 3 K
plt.scatter(x, FID_3K, label = "2.5K training images")
z = np.polyfit(x, FID_5K, 1)
p = np.poly1d(z)
plt.plot(x, p(x))
# 1 K
plt.scatter(x, FID_1K, label = "1.25K training images")
z = np.polyfit(x, FID_1K, 1)
p = np.poly1d(z)
plt.plot(x, p(x))
plt.legend()
plt.xlabel("iterations")
plt.ylabel("FID score")
plt.title("FID scores - image quality (lower is better)")
plt.show()

## IS SCORES ##
# 20 K
plt.figure()
plt.scatter(x, IS_20K, label = "20K training images")
z = np.polyfit(x, IS_20K, 1)
p = np.poly1d(z)
plt.plot(x, p(x))
# 10 K
plt.scatter(x, IS_10K, label ="10K training images")
z = np.polyfit(x, IS_10K, 1)
p = np.poly1d(z)
plt.plot(x, p(x))
# 5 K
plt.scatter(x, IS_5K, label ="5K training images")
z = np.polyfit(x, IS_5K, 1)
p = np.poly1d(z)
plt.plot(x, p(x))
# 3 K
plt.scatter(x, IS_3K, label ="2.5K training images")
z = np.polyfit(x, IS_3K, 1)
p = np.poly1d(z)
plt.plot(x, p(x))
# 1 K
plt.scatter(x, IS_1K, label ="1.25K training images")
z = np.polyfit(x, IS_1K, 1)
p = np.poly1d(z)
plt.plot(x, p(x))
plt.legend()
plt.xlabel("iterations")
plt.ylabel("IS score")
plt.title("IS scores - image diversity (higher is better)")
plt.show()